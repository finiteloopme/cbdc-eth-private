apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: eth-bootnode
  labels:
    app: eth-bootnode
spec:
  serviceName: "eth-bootnode"
  replicas: 2
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: eth-bootnode
  template:
    metadata:
      labels:
        app: eth-bootnode
    spec:
      securityContext:
        runAsUser: 2 # non-root
        fsGroup: 2
      volumes:
        - name: eth-bootnode-data
          persistentVolumeClaim:
            claimName: "eth-bootnode-data"
      containers:
      - name: bootnode
        image: ethereum/client-go:alltools-release-1.8
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: ".5"
          requests:
            cpu: "0.25"
        command: ["/bin/sh"]
        args:
        - "-c"
        - "bootnode --nodekey=/etc/bootnode/node.key --verbosity=4"
        volumeMounts:
        - name: eth-bootnode-data
          mountPath: /etc/bootnode
        ports:
        - name: discovery
          containerPort: 30301
          protocol: UDP
      - name: bootnode-server
        image: ethereum/client-go:alltools-release-1.8
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh"]
        args:
        - "-c"
        - "while [ 1 ]; do echo -e \"HTTP/1.1 200 OK\n\nenode://$(bootnode -writeaddress --nodekey=/etc/bootnode/node.key)@$(POD_IP):30301\" | nc -l -v -p 8080 || break; done;"
        volumeMounts:
        - name: eth-bootnode-data
          mountPath: /etc/bootnode
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - containerPort: 8080
      initContainers:
      - name: genkey
        image: ethereum/client-go:alltools-release-1.8
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh"]
        args:
        - "-c"
        - "if [-s /etc/bootnode/node.key]; then echo 'node.key found'; else bootnode --genkey=/etc/bootnode/node.key; fi;"
        volumeMounts:
        - name: eth-bootnode-data
          mountPath: /etc/bootnode
  volumeClaimTemplates:
    - metadata:
        name: eth-bootnode-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: "standard"
        resources:
          requests:
            storage: 10Mi